const HDLD_50SWLEVERRIFLE="W50";

class HD50SWLeverRifle:HDWeapon{
	default{
		+hdweapon.fitsinbackpack
		scale 0.60;
		weapon.selectionorder 50;
		weapon.slotnumber 4;
		weapon.kickback 30;
		weapon.bobrangex 0.21;
		weapon.bobrangey 0.86;
		weapon.bobstyle "normal";
		obituary "$OB_500LEVERGAT";
		inventory.pickupmessage "$PICKUP_500LEVERGAT";
		tag "$TAG_500LEVERGAT";
		hdweapon.refid HDLD_50SWLEVERRIFLE;
		hdweapon.barrelsize 28,0.6,2;
		inventory.maxamount 3;
		hdweapon.loadoutcodes"
			\cuscope - 0/1, adds a high magnification scope.";
	}
	
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse,bool doselect){return GetSpareWeaponRegular(newowner,reverse,doselect);}
	
	override double gunmass(){
		return 12;
	}
	override void PostBeginPlay(){
        weaponspecial = 1337; // [Ace] UaS sling compatibility.
        Super.PostBeginPlay();
    }
	override double weaponbulk(){
		return (weaponstatus[LEVS_SCOPE]==1?140:110)+weaponstatus[LEVS_MAG]*ENC_50SW_LOADED;
	}
	override string,double getpickupsprite(){
		return "5LVPZ0",1.;
	}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			sb.drawimage("SWRNA0",(-44,-10),sb.DI_SCREEN_CENTER_BOTTOM,scale:(2.0,2.0));
			sb.drawnum(hpl.countinv("HD500SWLightAmmo"),-46,-8,
				basestatusbar.DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK
			);
		}
		if(hdw.weaponstatus[0]&LEVF_SELECTFIRE)sb.drawwepcounter(hdw.weaponstatus[0]&LEVF_FIREMODE,
			-22,-10,"RBRSA3A7","STFULAUT"
		);
		sb.drawwepnum(hdw.weaponstatus[LEVS_MAG],10);
		if(hdw.weaponstatus[LEVS_CHAMBER]==2)sb.drawwepdot(-16,-10,(3,1));
	}
	override string gethelptext(){
		return
		WEPHELP_FIRESHOOT
		..WEPHELP_RELOADRELOAD
		..WEPHELP_UNLOADUNLOAD
		;
	}
	override void LoadoutConfigure(string input){

		if (GetLoadoutVar(input, "scope", 1) > 0){
			WeaponStatus[LEVS_SCOPE]=1;
		}

		InitializeWepStats(false);
	}
	override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc,string whichdot
	){
		int cx,cy,cw,ch;
		[cx,cy,cw,ch]=screen.GetClipRect();

		sb.SetClipRect(
			-16+bob.x,-4+bob.y,32,16,
			sb.DI_SCREEN_CENTER
		);

		vector2 bobb=bob*3;
		bobb.y=clamp(bobb.y,-8,8);

		if (hdw.WeaponStatus[LEVS_SCOPE]){
		sb.drawimage(
			"frntsite",(0,0)+bobb,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
			alpha:0.9,scale:(1.5,1.5)
		);

		sb.SetClipRect(cx,cy,cw,ch);
		sb.drawimage(
			"backsite",(0,0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,scale:(1.5,1.5)
		);
		}else{
			sb.drawimage(
				"frntsite",(0,0)+bobb,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
				alpha:0.9
			);
	
			sb.SetClipRect(cx,cy,cw,ch);
			sb.drawimage(
				"backsite",(0,0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP
			);
		}

		if(hdw.WeaponStatus[LEVS_SCOPE] & scopeview){
			int scaledyoffset=60;
			int scaledwidth=72;
			double degree=hdw.weaponstatus[LEVS_ZOOM]*0.1;
			double deg=1/degree;
			int cx,cy,cw,ch;
			[cx,cy,cw,ch]=screen.GetClipRect();
			sb.SetClipRect(
				-36+bob.x,24+bob.y,scaledwidth,scaledwidth,
				sb.DI_SCREEN_CENTER
			);


			sb.fill(color(255,0,0,0),
				bob.x-37,scaledyoffset+bob.y-37,
				74,74,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER
			);
	
			texman.setcameratotexture(hpc,"HDXCAM_ZM66",degree);
			let cam  = texman.CheckForTexture("HDXCAM_ZM66",TexMan.Type_Any);
			sb.DrawCircle(cam,(0,scaledyoffset)+bob*3,.11,usePixelRatio:true);

			sb.drawimage(
				"LVRG_RET",(0,scaledyoffset)+bob,
				sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
				scale:(0.72,0.72)
			);

			screen.SetClipRect(cx,cy,cw,ch);
			sb.drawimage(
				"libscope",(0,scaledyoffset)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
				scale:(1.0,1.0)
			);

			//sb.drawstring(
			//	sb.mAmountFont,string.format("%.1f",degree),
			//	(6+bob.x,95+bob.y),sb.DI_SCREEN_CENTER|sb.DI_TEXT_ALIGN_RIGHT,
			//	Font.CR_BLACK
			//);
		}
	}
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,10);
			if(owner.countinv("HD500SWLightAmmo"))owner.A_DropInventory("HD500SWLightAmmo",amt*10);
		}
	}
	
	int handrounds;
	override void DetachFromOwner(){
		if(handrounds>0){
			if(owner)owner.A_DropItem("HD500SWLightAmmo",handrounds);
			else A_DropItem("HD500SWLightAmmo",handrounds);
		}
		handrounds=0;
		super.detachfromowner();
	}
	
	action void A_SetAltHold(bool which){
		if(which)invoker.weaponstatus[0]|=LEVF_ALTHOLDING;
		else invoker.weaponstatus[0]&=~LEVF_ALTHOLDING;
	}
	
	states{
	select0:
		W5SC B 0 A_JumpIf(invoker.weaponstatus[LEVS_SCOPE]>0,2);
		W5SW B 0;
		#### B 0;
		goto select0small;
	deselect0:
		W5SC B 0 A_JumpIf(invoker.weaponstatus[LEVS_SCOPE]>0,2);
		W5SW B 0;
		#### B 0;
		goto deselect0small;

	ready:
		W5SC A 0 A_JumpIf(invoker.weaponstatus[LEVS_SCOPE]>0,2);
		W5SW A 0;
		#### A 0 A_JumpIf(invoker.weaponstatus[LEVS_HAMMER]<2,2);
		#### B 0;
		---- # 1{
		//if(invoker.weaponstatus[LEVS_SCOPE]>0 && pressingzoom())A_ZoomAdjust(LEVS_ZOOM,25,70);
			//else
			A_WeaponReady(WRF_ALL);
			A_SetAltHold(false);
		}goto readyend;
	//user3:
		//---- A 0 A_MagManager("HD9mMag15");
		//goto ready;
	//user2:
	altfire:
		W5SC A 0 A_JumpIf(invoker.weaponstatus[LEVS_SCOPE]>0,2);
		W5SW A 0;
		---- A 0 A_JumpIf(invoker.weaponstatus[0]&LEVF_ALTHOLDING,"nope");
		---- A 1; //A_WeaponBusy();//offset(0,34)\
		// ---- E 1 A_SetAltHold(true);//offset(4,38)
		#### E 1 {A_StartSound("500SWCarbine/cock1",8,CHANF_OVERLAP);A_MuzzleClimb(0,frandom(0.6,1.));A_MuzzleClimb(0,frandom(0.6,1.));}
		#### E 0 A_Refire("chamber");
		#### EA 1 A_MuzzleClimb(0,-frandom(0.06,0.1));
		#### A 0 A_StartSound("weapons/huntshort",8);
		goto ready;
	althold:
		W5SC F 0 A_JumpIf(invoker.weaponstatus[LEVS_SCOPE]>0,2);
		W5SW F 0;
		#### F 1 A_WeaponReady(WRF_NOFIRE);
		#### F 0{
			A_ClearRefire();
			bool chempty=invoker.weaponstatus[LEVS_CHAMBER]<1;
			if(pressingunload()){
				if(chempty){
					return resolvestate("altholdend");
				}else{
					invoker.weaponstatus[0]|=LEVF_JUSTUNLOAD;
					return resolvestate("loadchamber");
				}
			}else if(pressingreload()){
				if(
					!chempty
				){
					invoker.weaponstatus[0]|=LEVF_JUSTUNLOAD;
					return resolvestate("loadchamber");
				}else if(
					countinv("HD500SWLightAmmo")
				){
					invoker.weaponstatus[0]&=~LEVF_JUSTUNLOAD;
					return resolvestate("loadchamber");
				}
			}
			if(pressingaltfire())return resolvestate("althold");
			return resolvestate("altholdend");
		}
		loop;
	altholdend:
		W5SC F 0 A_JumpIf(invoker.weaponstatus[LEVS_SCOPE]>0,2);
		W5SW F 0;
		#### F 0 A_StartSound("500SWCarbine/Cock2",8,CHANF_OVERLAP);
		#### EE 1 {A_WeaponReady(WRF_NOFIRE);A_MuzzleClimb(0,-frandom(0.6,1.));}
		#### A 0 {
			A_WeaponReady(WRF_NOFIRE);
		}
		goto ready;
	loadchamber:
		W5SC F 0 A_JumpIf(invoker.weaponstatus[LEVS_SCOPE]>0,2);
		W5SW F 0;
		#### F 1 offset(2,36) A_ClearRefire();
		#### F 1 offset(3,38);
		#### F 1 offset(5,42);
		#### F 1 offset(8,48) A_StartSound("weapons/pocket",9);
		#### F 1 offset(9,52) A_MuzzleClimb(frandom(-0.2,0.2),0.2,frandom(-0.2,0.2),0.2,frandom(-0.2,0.2),0.2);
		#### F 2 offset(8,60);
		#### F 2 offset(7,72);
		TNT1 A 18 A_StartSound("weapons/pocket",9);
		TNT1 A 4{
			A_StartSound("weapons/bossload",8,volume:0.7);
			if(invoker.weaponstatus[0]&LEVF_JUSTUNLOAD){
				int chm=invoker.weaponstatus[LEVS_CHAMBER];
				invoker.weaponstatus[LEVS_CHAMBER]=0;
				if(chm<2||A_JumpIfInventory("HD500SWLightAmmo",0,"null")){
					class<actor> whatkind=chm==2?"HDLoose500Light":"HDSpent500"; //just use 355 if fuck
					actor rrr=spawn(whatkind,pos+(cos(angle)*10,sin(angle)*10,height-12),ALLOW_REPLACE);
					rrr.angle=angle;rrr.A_ChangeVelocity(1,2,1,CVF_RELATIVE);
				}else HDF.Give(self,"HD500SWLightAmmo",1);
			}else{
				A_TakeInventory("HD500SWLightAmmo",1,TIF_NOTAKEINFINITE);
				invoker.weaponstatus[LEVS_CHAMBER]=2;
			}
		} 
	loadchamber.cont:
		W5SC F 0 A_JumpIf(invoker.weaponstatus[LEVS_SCOPE]>0,2);
		W5SW F 0;
		#### F 2 offset(7,72);
		#### F 2 offset(8,60);
		#### F 1 offset(7,52);
		#### F 1 offset(5,42);
		#### F 1 offset(3,38);
		#### F 1 offset(2,35);
		goto altholdend;
		
	chamber:
		W5SC F 0 A_JumpIf(invoker.weaponstatus[LEVS_SCOPE]>0,2);
		W5SW F 0;
		#### E 1 {
			A_MuzzleClimb(frandom(0.1,0.2));
			if(
				invoker.weaponstatus[LEVS_CHAMBER]>2
			){
				invoker.weaponstatus[LEVS_CHAMBER]+=2;
				A_MuzzleClimb(
					-frandom(0.6,2.3),-frandom(0.6,2.3),
					-frandom(0.6,1.3),-frandom(0.6,1.3),
					-frandom(0.6,1.3),-frandom(0.6,1.3)
				);
			}
			// else A_StartSound("500SWCarbine/cock1",8,CHANF_OVERLAP);
		}
		#### G 1 {
			//eject
			
			invoker.weaponstatus[LEVS_HAMMER]=0;
			
			int chm=invoker.weaponstatus[LEVS_CHAMBER];
			if(chm>1){  
				A_EjectCasing("HDLoose500Light",
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(1,1.5),frandom(2,2.2)),
					(0,0,-2)
				);
			}else if(chm==1){
				A_EjectCasing("HDSpent500",
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(0,0.5),frandom(2,2.2)),
					(0,0,-2)
				);
			}
			//cycle new
			if(invoker.weaponstatus[LEVS_MAG]>0){  
				invoker.weaponstatus[LEVS_CHAMBER]=2;
				invoker.weaponstatus[LEVS_MAG]--;
			}else invoker.weaponstatus[LEVS_CHAMBER]=0;
		}
		#### F 2 {A_WeaponReady(WRF_NOFIRE);A_MuzzleClimb(-frandom(0.1,0.2));}
		#### F 0 A_Refire("althold");
		goto altholdend;
	hold:
		---- A 0{
			bool paf=pressingaltfire();
			if(
				paf&&!(invoker.weaponstatus[0]&LEVF_ALTHOLDING)
			)setweaponstate("altfire");
			else if(!paf)invoker.weaponstatus[0]&=~LEVF_ALTHOLDING;
		}
		---- A 1 A_WeaponReady(WRF_NONE);
		---- A 0 A_Refire();
		goto ready;
	fire:
		W5SC B 0 A_JumpIf(invoker.weaponstatus[LEVS_SCOPE]>0,2);
		W5SW B 0;
		#### B 0{
		if(invoker.weaponstatus[LEVS_HAMMER]<3)A_StartSound("weapons/rifleclick2",1,CHANF_OVERLAP);
		invoker.weaponstatus[LEVS_HAMMER]=4;
			invoker.weaponstatus[0]&=~LEVF_JUSTUNLOAD;
			if(invoker.weaponstatus[LEVS_CHAMBER]==2)setweaponstate("shoot");
		}
		---- B 1 A_WeaponReady(WRF_NONE);
		---- B 0 A_Refire();
		goto ready;
	shoot:
		W5SC B 0 A_JumpIf(invoker.weaponstatus[LEVS_SCOPE]>0,2);
		W5SW B 0;
		#### B 1{
			if(invoker.weaponstatus[LEVS_CHAMBER]==2)A_GunFlash();
		}
		#### D 2{
			A_MuzzleClimb(-frandom(1.6,2.4),-frandom(0.6,1.8));
		}
		#### C 1;
		---- A 0 A_Refire("ready");
		goto ready;
	flash:
		5SCF B 0 A_JumpIf(invoker.weaponstatus[LEVS_SCOPE]>0,2);
		W55F A 0;
		---- A 1 bright{
			HDFlashAlpha(64);
			A_Light1();
			let bbb=HDBulletActor.FireBullet(self,"HDB_500SW",speedfactor:1.45);
			if(
				frandom(0,ceilingz-floorz)<bbb.speed*0.3
			)A_AlertMonsters(256);

			invoker.weaponstatus[LEVS_CHAMBER]=1;
			A_ZoomRecoil(0.995);
			A_MuzzleClimb(-frandom(0.4,1.2),-frandom(0.4,1.6));
		}
		---- A 0{
					A_StartSound("500SWCarbine/fire1",CHAN_WEAPON,CHANF_OVERLAP);
					A_StartSound("500SWCarbine/fire2",CHAN_WEAPON,CHANF_OVERLAP);
				}
		---- A 0 A_Light0();
		stop;

	reload:
		---- A 1 offset(0,34);
		---- A 1 offset(2,36);
		---- A 1 offset(4,40);
		---- A 2 offset(8,42){
			A_StartSound("weapons/rifleclick2",8,CHANF_OVERLAP,0.9,pitch:0.95);
			A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
		}
		---- A 4 offset(14,46){
			A_StartSound("weapons/rifleload",8,CHANF_OVERLAP);
			A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
		}
		---- A 0{
			int mg=invoker.weaponstatus[LEVS_MAG];
			if(mg==10)setweaponstate("reloaddone");
		}
	loadhand:
		---- A 0 A_JumpIfInventory("HD500SWLightAmmo",1,"loadhandloop");
		goto reloaddone;
	loadhandloop:
		---- A 4{
			int hnd=min(
				countinv("HD500SWLightAmmo"),3,
				10-invoker.weaponstatus[LEVS_MAG]
			);
			if(hnd<1){
				setweaponstate("reloaddone");
				return;
			}else{
				A_TakeInventory("HD500SWLightAmmo",hnd,TIF_NOTAKEINFINITE);
				invoker.handrounds=hnd;
				A_StartSound("weapons/pocket",9,volume:0.25);
			}
		}
	loadone:
		---- A 2 offset(16,50) A_JumpIf(invoker.handrounds<1,"loadhandnext");
		---- A 4 offset(14,46){
			invoker.handrounds--;
			invoker.weaponstatus[LEVS_MAG]++;
			A_StartSound("weapons/rifleclick2",8);
		}loop;
	loadhandnext:
        ---- A 4 offset(16,48)
        {
            if(!PressingReload()&&!PressingFire()&&!PressingAltFire()&&!PressingZoom()||!countinv("HD500SWLightAmmo"))setweaponstate("reloaddone");
            else A_StartSound("weapons/pocket",9);
        }
        goto loadhandloop;
	reloaddone:
		---- A 1 offset(4,40);
		---- A 1 offset(2,36);
		---- A 1 offset(0,34);
		goto nope;
	unload:
		---- A 1 offset(0,34);
		---- A 1 offset(2,36);
		---- A 1 offset(4,40);
		---- A 2 offset(8,42){
			A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
			A_StartSound("weapons/rifleclick2",8);
		}
		---- A 4 offset (14,46){
			A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
			A_StartSound("weapons/rifleload",8);
		}
	unloadloop:
		---- A 4 offset(3,41){
			if(invoker.weaponstatus[LEVS_MAG]<1)setweaponstate("unloaddone");
			else{
				A_StartSound("weapons/rifleclick2",8);
				invoker.weaponstatus[LEVS_MAG]--;
				if(A_JumpIfInventory("HD500SWLightAmmo",0,"null")){
					A_SpawnItemEx(
						"HDLoose500Light",cos(pitch)*8,0,height-7-sin(pitch)*8,
						cos(pitch)*cos(angle-40)*1+vel.x,
						cos(pitch)*sin(angle-40)*1+vel.y,
						-sin(pitch)*1+vel.z,
						0,SXF_ABSOLUTEMOMENTUM|
						SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
					);
				}else A_GiveInventory("HD500SWLightAmmo",1);
			}
		}
		---- A 2 offset(2,42);
		---- A 0{
			if(
				PressingReload()||
				PressingFire()||
				PressingAltFire()||
				PressingZoom()
			)setweaponstate("unloaddone");
		}loop;
	unloaddone:
		---- A 2 offset(2,42);
		---- A 3 offset(3,41);
		---- A 1 offset(4,40) A_StartSound("weapons/rifleclick",8);
		---- A 1 offset(2,36);
		---- A 1 offset(0,34);
		goto ready;


	spawn:
		5LSP Z 0 NoDelay A_JumpIf(invoker.weaponstatus[LEVS_SCOPE]>0,2);
		5LVP Z 0 ;
		#### Z -1;
		stop;
	}
	override void initializewepstats(bool idfa){
		weaponstatus[LEVS_MAG]=10;
		weaponstatus[LEVS_CHAMBER]=2;
		weaponstatus[LEVS_ZOOM]=20;
	}

}


enum levgatstatus{
	LEVF_SELECTFIRE=1,
	LEVF_FIREMODE=2,
	LEVF_JUSTUNLOAD=4,
	LEVF_ALTHOLDING=8,
	LEVF_HOLDING=16,

	LEVS_ZOOM=1,
	LEVS_SCOPE=2,
	LEVS_FLAGS=3,
	LEVS_MAG=4,
	LEVS_CHAMBER=5, //0 empty, 1 spent, 2 loaded
	LEVS_HAMMER=6, //0 down, 1 up
	LEVS_HAND=7,
}
